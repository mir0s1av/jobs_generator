name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup protoc
        uses: arduino/setup-protoc@v3.0.0

      - run: yarn --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 493516932002.dkr.ecr.eu-central-1.amazonaws.com

      - name: Build and Push all images to ECR
        run: |
          IMAGES=(
            "jobs apps/jobs/Dockerfile"
            "executor apps/executor/Dockerfile"
            "auth apps/auth/Dockerfile"
            "products apps/products/Dockerfile"
          )
          for image in "${IMAGES[@]}"; do
            NAME=$(echo $image | cut -d' ' -f1)
            DOCKERFILE=$(echo $image | cut -d' ' -f2)

            {
            docker build \
              --tag 493516932002.dkr.ecr.eu-central-1.amazonaws.com/jobs-generator/$NAME:latest \
              -f $DOCKERFILE \
              . && docker push 493516932002.dkr.ecr.eu-central-1.amazonaws.com/jobs-generator/$NAME:latest
            } & 
          done

          wait

      - run: npx nx affected -t lint build
